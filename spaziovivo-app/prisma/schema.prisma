// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
        url      = env("DATABASE_URL")
}

model Employee {
    id        Int     @default(autoincrement()) @id
    first_name     String
    last_name      String
    estates     Estates[]
}

model City {
    id        Int     @default(autoincrement()) @id
    city_name    String
    estates     Estates[]
}

model Type {
    id        Int     @default(autoincrement()) @id
    type_name    String
    estates     Estates[]
}

model Status {
    id        Int     @default(autoincrement()) @id
    status_name    String
    estates     Estates[]
}

model Estates{
    id    String     @id @default(uuid())
    estate_name      String @db.VarChar(200)
    city    City   @relation(fields: [cityId], references: [id])
    cityId  Int
    type    Type   @relation(fields: [typeId], references: [id])
    typeId  Int
    status    Status   @relation(fields: [statusId], references: [id])
    statusId  Int
    employee    Employee   @relation(fields: [employeeId], references: [id])
    employeeId  Int
    total_area    Int
    number_of_garage  Int
    number_of_floors  Int
    number_of_bedroom Int
    number_of_bathroom Int
    estate_description  String @db.Text()
    price Float
    price_monthly Float
    currency String
    latitude Float
    longitude Float
    pictures    Photos[]
}

model Photos {
    id String @id @default(uuid())
    url String
    tag String?
    estate Estates @relation(fields: [estateId], references: [id])
    estateId String
}
